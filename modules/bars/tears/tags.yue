import "wibox"
import "beautiful"
import "awful"

import "lib.std"
import "core.utils.factory"
import "core.enum" as modifiers:{:SUPER, :EMPTY}

DPI = beautiful.xresources.apply_dpi
resource = factory.resource_factory!

bindings =
  *
    modifiers: EMPTY
    button: awful.button.names.LEFT
    on_press: (tag) -> tag::view_only!
  *
    modifiers: SUPER
    button: awful.button.names.LEFT
    on_press: (tag) -> if client.focus then client.focus::move_to_tag(tag)
  *
    modifiers: EMPTY
    button: awful.button.names.SCROLL_UP
    on_press: (tag) -> awful.tag.viewprev(tag.screen)
  *
    modifiers: EMPTY
    button: awful.button.names.SCROLL_DOWN
    on_press: (tag) -> awful.tag.viewnext(tag.screen)

update_state = (imagebox, tag) ->
  clients = #tag::clients!
  if tag.urgent
    imagebox.image = resource.prohibit_inset_fill
    imagebox.stylesheet = "*{fill:#{beautiful.taglist_bg_urgent};}"
    return

  if awful.screen.focused!.selected_tag.index == tag.index
    imagebox.image = resource.asterisk_fill
    imagebox.stylesheet = "*{fill:#{beautiful.taglist_bg_focus};}"
    return

  if clients > 0
    imagebox.image = resource.circle_dashed_fill
    imagebox.stylesheet = "*{fill:#{beautiful.taglist_bg_occupied};}"
  elseif clients == 0
    imagebox.image = resource.radio_button_fill
    imagebox.stylesheet = "*{fill:#{beautiful.taglist_bg_empty};}"
  else
    imagebox.image = resource.warning_circle_fill
    imagebox.stylesheet = "*{fill:#{beautiful.taglist_bg_urgent};}"

return
  <call>: (...) => @.new(...)
  new: (local_screen) ->
    return
      screen: local_screen
      filter: awful.widget.taglist.filter.all
      layout: wibox.layout.fixed.horizontal
      buttons: std.table.map(awful.button, bindings)
      widget_template:
        *
          *
            id: "image_role"
            forced_height: DPI(25)
            forced_width: DPI(25)
            valign: "center"
            widget: wibox.widget.imagebox
          widget: wibox.container.margin
        bg: beautiful.taglist_bg
        shape: beautiful.taglist_shape
        widget: wibox.container.background
        create_callback: (tag) => update_state(@\get_children_by_id("image_role")[1], tag)
        update_callback: (tag) => update_state(@\get_children_by_id("image_role")[1], tag)
