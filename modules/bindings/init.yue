import "awful" as Awful
import "gears" as Gears
import "lfs" as Filesystem
import "core.utils.factory"

excludes =
  * "^%.$"
  * "^%.%.$"
  * "^init%.lua$"
  * "^mouse%.lua$"
  * ".*%.yue$"
  <index>: (file) => #[pattern for pattern in *@ when file::match pattern] > 0

for file in Filesystem.dir "#{Gears.filesystem.get_configuration_dir!}/modules/bindings"
  if not excludes[file]
    stem = factory.stem file
    bindings = require "modules.bindings.#{stem}"
    if U.table.is_list bindings then bindings = [stem]: bindings
    factory.apply_bindings bindings, false, Awful.keyboard.append_global_keybinding

import "modules.bindings.mouse"
factory.apply_bindings mouse: mouse, true, Awful.mouse.append_global_mousebinding

client.connect_signal "request::default_mousebindings", ->
  import "modules.bindings.node.mouse" as node_mouse
  factory.apply_bindings mouse: node_mouse, true, Awful.mouse.append_client_mousebinding

client.connect_signal "request::default_keybindings", ->
  import "modules.bindings.node.keyboard" as node_keyboard
  factory.apply_bindings keyboard: node_keyboard, false, Awful.keyboard.append_client_keybinding
