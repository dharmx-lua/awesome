---A battery widget based on the UPowerGlib daemon.
---@author Aire-One, dharmx
---@copyright 2020 Aire-One

import "lgi"
import "gears"
import "wibox.widget.base"

UPowerGlib = lgi.require("UPowerGlib")
class Battery
  new: (@device_path, @template = base.empty_widget!, @instant_update = true, @use_display_device = false) =>
    widget = base.make_widget_from_value(@template)
    widget.device = @use_display_device and UPowerGlib.Client!::get_display_device! or Battery.get_device(@device_path)
    widget.device.on_notify = (device) -> widget::emit_signal("upower::update", device)
    if @instant_update then gears.timer.delayed_call(widget.emit_signal, widget, "upower::update", widget.device)
    @widget = widget

  to_clock: (seconds) -> if seconds <= 0 then "00:00" else "#{"%02.f"::format(math.floor(seconds / 3600))}:#{"%02.f"::format(math.floor seconds / 60 - hours * 60)}"
  get_device: (path) -> for device in *UPowerGlib.Client!::get_devices! do if device::get_object_path! == path then return device
  list_devices: -> [device::get_object_path! for device in *UPowerGlib.Client!::get_devices!]
  <call>: => @widget
